"use strict";(self.webpackChunkconstellaxion_docs=self.webpackChunkconstellaxion_docs||[]).push([[7966],{1311:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"configure/under-the-hood/job-json","title":"Tracking Project State","description":"After you run:","source":"@site/docs/configure/under-the-hood/job-json.md","sourceDirName":"configure/under-the-hood","slug":"/configure/under-the-hood/job-json","permalink":"/constellaxion.github.io/docs/next/configure/under-the-hood/job-json","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Under the hood","permalink":"/constellaxion.github.io/docs/next/category/under-the-hood"}}');var r=i(4848),t=i(8453);const o={sidebar_position:1},l="Tracking Project State",d={},c=[{value:"\ud83d\udca1 job.json Explained",id:"-jobjson-explained",level:2},{value:"Example",id:"example",level:3},{value:"model",id:"model",level:3},{value:"dataset",id:"dataset",level:3},{value:"training",id:"training",level:3},{value:"deploy",id:"deploy",level:3},{value:"\ud83e\udde0 Why job.json Matters",id:"-why-jobjson-matters",level:2},{value:"\ud83d\udd17 Related Pages",id:"-related-pages",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"tracking-project-state",children:"Tracking Project State"})}),"\n",(0,r.jsx)(n.p,{children:"After you run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"constellaxion init\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Constellaxion generates a ",(0,r.jsx)(n.code,{children:"job.json"})," file that captures the complete state of your deployment or training workflow. This file is automatically referenced when running commands like ",(0,r.jsx)(n.code,{children:"train"}),", ",(0,r.jsx)(n.code,{children:"serve"}),", ",(0,r.jsx)(n.code,{children:"deploy"}),", or ",(0,r.jsx)(n.code,{children:"prompt"}),"."]}),"\n",(0,r.jsx)(n.admonition,{title:"Heads up!",type:"warning",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"job.json"})," is Constellaxion's memory of what you\u2019re working on \u2014 don\u2019t edit it manually unless you know what you\u2019re doing."]})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-jobjson-explained",children:"\ud83d\udca1 job.json Explained"}),"\n",(0,r.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "model": {\n        "model_id": "my-sentiment-llm",\n        "base_model": "TinyLlama/TinyLlama-1.1B-intermediate-step-1431k-3T"\n    },\n    "dataset": {\n        "train": {\n            "local": "./train.csv",\n            "cloud": "my-sentiment-llm/data/train.csv"\n        },\n        "val": {\n            "local": "./val.csv",\n            "cloud": "my-sentiment-llm/data/val.csv"\n        },\n        "test": {\n            "local": "./test.csv",\n            "cloud": "my-sentiment-llm/data/test.csv"\n        }\n    },\n    "training": {\n        "epochs": 1,\n        "batch_size": 4,\n        "tensorboard_url": "https://<tensorboard-url>"\n    },\n    "deploy": {\n        "provider": "gcp",\n        "project_id": "<your-project-id>",\n        "location": "<your-region>",\n        "bucket_name": "<your-bucket-name>",\n        "staging_dir": "my-sentiment-llm/staging",\n        "experiments_dir": "my-sentiment-llm/experiments",\n        "model_path": "my-sentiment-llm/model",\n        "service_account": "constellaxion-admin@<your-project-id>.iam.gserviceaccount.com"\n    }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"\ud83d\udd0d Field-by-Field Breakdown"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"model",children:"model"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"model_id"})," ",(0,r.jsx)(n.em,{children:"string"})," - The unique label for this project or experiment."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"base_model"})," ",(0,r.jsx)(n.em,{children:"string"})," - The Hugging Face model ID used as the starting point for deployment or fine-tuning."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"dataset",children:"dataset"}),"\n",(0,r.jsx)(n.p,{children:"Holds references to your dataset files, both locally and in cloud storage."}),"\n",(0,r.jsx)(n.p,{children:"Each entry (train, val, test) has:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"local"})," ",(0,r.jsx)(n.em,{children:"string"})," - The path on your local file system (usually in the same directory as model.yaml)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"cloud"})," ",(0,r.jsx)(n.em,{children:"string"})," - The upload path inside your GCS bucket"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"These paths are used during job upload and training orchestration."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"training",children:"training"}),"\n",(0,r.jsx)(n.p,{children:"This section only appears if you\u2019re fine-tuning a model."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"epochs"})," ",(0,r.jsx)(n.em,{children:"int"})," - Number of epochs for training"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"batch_size"})," ",(0,r.jsx)(n.em,{children:"int"})," - Batch size used in training"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"tensorboard_url"})," ",(0,r.jsx)(n.em,{children:"string"})," (optional) - A link to the TensorBoard experiment tracking your training run, generated automatically on Vertex AI if applicable."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"deploy",children:"deploy"}),"\n",(0,r.jsx)(n.p,{children:"This section configures your cloud deployment."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"provider"})," ",(0,r.jsx)(n.em,{children:"string"})," - The cloud backend used. Currently supports gcp. (Multi-cloud support coming soon.)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"project_id"})," ",(0,r.jsx)(n.em,{children:"string"})," - Your GCP project identifier."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"location"})," ",(0,r.jsx)(n.em,{children:"string"})," - GCP region where jobs run."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"bucket_name"})," ",(0,r.jsx)(n.em,{children:"string"})," - Your GCS bucket for model artifacts, datasets, logs."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"staging_dir"})," ",(0,r.jsx)(n.em,{children:"string"})," - Temp directory where data is uploaded before processing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"experiments_dir"})," ",(0,r.jsx)(n.em,{children:"string"})," - Where logs, checkpoints, and metrics are saved during training."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"model_path"})," ",(0,r.jsx)(n.em,{children:"string"})," - Where the final trained model will be saved in GCS."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"service_account"})," ",(0,r.jsx)(n.em,{children:"string"})," - The service account used to launch Vertex AI jobs. Must have sufficient IAM permissions."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-why-jobjson-matters",children:"\ud83e\udde0 Why job.json Matters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"It keeps your commands short \u2014 no need to re-specify paths or settings"}),"\n",(0,r.jsx)(n.li,{children:"It ensures reproducibility \u2014 your job context is recorded"}),"\n",(0,r.jsx)(n.li,{children:"It\u2019s updated incrementally \u2014 e.g., after train, new fields like tensorboard_url or checkpoints may be added"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\ud83d\udee0\ufe0f Troubleshooting"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Missing field? Run ",(0,r.jsx)(n.code,{children:"constellaxion init"})," again to regenerate."]}),"\n",(0,r.jsxs)(n.li,{children:["Wrong cloud config? Update your ",(0,r.jsx)(n.code,{children:"model.yaml"})," and re-init."]}),"\n",(0,r.jsxs)(n.li,{children:["Multiple environments? Keep separate directories with their own ",(0,r.jsx)(n.code,{children:"job.json"})," files."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-related-pages",children:"\ud83d\udd17 Related Pages"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"../../getting-started",children:"Getting Started \u2192"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"../model-yaml",children:"Setting up your model.yaml \u2192"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var s=i(6540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);